#!/bin/sh

# load a sane environment
. /etc/profile

checkResourceFiles() {
	UPDATEAVAILABLE=false
	VERSIONSAVAILABLE=`curl -Nks https://raw.githubusercontent.com/IgorYbema/tscSettings/master/resource.file.versions`
 	MD5NEW=`echo "$VERSIONSAVAILABLE" | grep $ARCH | grep $VERSION | grep base | cut -d\, -f4`
        MD5NOW=`/usr/bin/md5sum /qmf/qml/resources-static-base.rcc | cut -d\  -f1`
        if [ !  "$MD5NOW" == "$MD5NEW" ]
        then
                echo "Base resource file update available!"
		UPDATEAVAILABLE=true
	fi

 	MD5NEW=`echo "$VERSIONSAVAILABLE" | grep $ARCH | grep $VERSION | grep ebl | cut -d\, -f4`
        MD5NOW=`/usr/bin/md5sum /qmf/qml/resources-static-ebl.rcc | cut -d\  -f1`
        if [ !  "$MD5NOW" == "$MD5NEW" ]
        then
                echo "EBL resource file update available!"
		UPDATEAVAILABLE=true
        fi
}

updateResourceFiles() {
	echo "Updating resource files!"

        RESOURCEFILEURL="http://files.domoticaforum.eu/uploads/Toon/resourcefiles/resources-$ARCH-$VERSION.zip"
        /usr/bin/wget  $RESOURCEFILEURL -O /tmp/resources-$ARCH-$VERSION.zip -T 5 -t 2 -o /dev/null
        RESULT=$?

        if [ ! $RESULT == 0 ]
        then
                echo "Could not download a resources.rcc file for this version! Continuing, but your custom apps probably dont work anymore"
        else
                mv /qmf/qml/resources-static-base.rcc /qmf/qml/resources-static-base.rcc.backup
                mv /qmf/qml/resources-static-ebl.rcc /qmf/qml/resources-static-ebl.rcc.backup
                /usr/bin/unzip -oq /tmp/resources-$ARCH-$VERSION.zip -d /qmf/qml
        fi
}

getVersion() {
        #determine current architecture
        if grep -q nxt /etc/opkg/arch.conf
        then
                ARCH="nxt"
        else
                ARCH="qb2"
        fi
        VERSION=`opkg list-installed base-$ARCH-\* | sed -r -e "s/base-$ARCH-([a-z]{3})\s-\s([0-9]*\.[0-9]*\.[0-9]*)-.*/\2/"`
	echo "Running $VERSION on a $ARCH"
}

ROUNDWAIT=10
UPDATECHECKINTERVAL=86400
STARTTIME=`date +%s`
LASTUPDATECHECK=0

echo "Starting TSC support script"
while true
do
	STARTROUNDTIME=`date +%s`
	if [[ $(( $LASTUPDATECHECK + $UPDATECHECKINTERVAL )) -lt $STARTROUNDTIME ]]
	then
		echo "Checking for updates"
		LASTUPDATECHECK=$STARTROUNDTIME
		getVersion
		checkResourceFiles
		if [ "$UPDATEAVAILABLE" = true ] 
		then
			updateResourceFiles
		fi
	fi
	
	WAITTIME=$(( $STARTROUNDTIME + $ROUNDWAIT - `date +%s` )) 
	if  [[ $WAITTIME -gt 0  ]]
	then
		sleep $WAITTIME
	fi
	echo "Doing another round"
done

